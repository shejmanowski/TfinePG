import streamlit as st
import generator
import numpy as np
from PIL import Image as im

st.set_page_config(page_title="TfinePG", page_icon="./thermo_face.jpg")

# ---- HEADER SECTION ----
st.header("TfinePG")
st.subheader("Thermal Face Images of Non-existing People Generator")
st.divider()

generated_img = generator.generate_img()

col1, col2 = st.columns(2)

with col1:
    st.markdown("<p style='text-align: center;'>This site lets you generate face images of non-existing people. "
                "What makes it unique compared to other sites like thispersondoesntexist "
                "is that generated images are thermographs..</p>", unsafe_allow_html=True)

    col11, col12, col13 = st.columns([1, 1, 1])
    with col12:
        if st.button('GENERATE'):
            generated_img = generator.generate_img()
            print(generated_img.shape)

        # dwnld_img = np.squeeze(generated_img, axis=-4)
        dwnld_img = np.reshape(generated_img, (64, 48))
        dwnld_img = (dwnld_img * 255).astype(np.uint8)
        data = im.fromarray(dwnld_img, 'L')
        data.save('img.jpeg')
        with open("img.jpeg", "rb") as file:
            btn = st.download_button(label="SAVE IMG", data=file, file_name="generated_face.jpeg", mime="image/jpeg")

with col2:
    # st.write(option)
    col21, col22, col23 = st.columns([1, 1, 1])
    with col22:
        st.image(generated_img, use_column_width=True)

st.divider()

st.image('./assets/all2.png')

st.divider()

st.header('How does it work?')

st.markdown("""
    Our website utilizes an advanced machine learning model known as a Variational Autoencoder (VAE) to generate 
    thermal images. This state-of-the-art algorithm enables us to create highly realistic thermal imagery that 
    closely resembles actual thermal imaging data.

    Variational Autoencoders (VAEs) are a type of deep learning model specifically designed for encoding and 
    decoding complex data. In our case, the VAE is trained on thermal images. The VAE consists of two main 
    components: an encoder and a decoder.

    **Encoder:**

    The encoder takes a thermal image as input and learns to map it to a lower-dimensional latent space. 
    This latent space representation captures the essential features of the input image. The encoder 
    network consists of several convolutional layers that extract hierarchical features from the input 
    image. These features are then compressed into a lower-dimensional vector, which forms the latent representation.

    **Latent Space:**

    The latent space serves as a compressed representation of the thermal image. It captures the underlying 
    structure and distribution of the input images. By learning this representation, the VAE can generate new 
    samples that resemble the training data. The latent space is typically designed to follow a specific 
    probability distribution, such as a Gaussian distribution, enabling the generation of diverse and 
    realistic samples.

    **Decoder:**

    The decoder takes a point from the latent space and reconstructs the corresponding thermal image. It 
    performs the reverse operation of the encoder by upsampling and transforming the latent representation 
    into a full-size thermal image. The decoder network consists of convolutional and deconvolutional layers 
    that reconstruct the image by learning to capture the essential features from the latent space.

    **Training:**

    During the training phase, the VAE is trained on a large dataset of thermal images. The objective is 
    to minimize the reconstruction error, which measures the difference between the original image and the
     reconstructed image generated by the decoder. Additionally, a regularization term called the Kullback-Leibler (KL) 
     divergence is used to ensure that the latent space distribution matches the desired distribution.

    **Generating Images:**

    Once the VAE is trained, we can generate new thermographic images by sampling random points from the latent space. 
    By inputting these sampled points into the decoder, we obtain synthesized thermal images that exhibit similar 
    patterns and structures as the original training data. This process allows us to create a wide variety of realistic
     thermal images on demand.

    By harnessing the power of VAEs, our website provides an immersive and scientific exploration of thermal 
    imaging, offering users a unique perspective into the unseen world of heat signatures and temperature variations.
    """)

st.header('What is it for?')

st.markdown("""
    Our generated images serve various purposes, thanks to the unique capabilities of our model. Some of the key 
    applications and benefits include:

    **Training Data Privacy:**

    The images produced by our model, including faces, are synthetic and do not belong to any real individuals. 
    This aspect ensures the protection of privacy and confidentiality, making them ideal for training machine 
    learning models that require diverse and realistic data without compromising the privacy of individuals.

    **Data Augmentation:**

    Our generated images can be used to augment existing datasets for training machine learning models. By 
    introducing additional synthetic thermal images, we can increase the diversity and size of the training 
    data, leading to improved model generalization and performance.

    **Algorithm Testing and Evaluation:**

    Researchers and developers can leverage our generated thermal images to test and evaluate their algorithms 
    and models in various thermal imaging scenarios. By using diverse and realistic synthetic data, they can
     assess the robustness and effectiveness of their algorithms before deploying them in real-world applications.

    **Educational and Research Purposes:**

    Our generated thermal images can be valuable resources for educational institutions and researchers. 
    They offer a visual representation of thermal patterns and can aid in teaching thermography, studying 
    thermal dynamics, or exploring various research areas related to heat analysis and temperature variations.

    **Visual Effects and Creative Projects:**

    Artists, game developers, and filmmakers can incorporate our realistic synthetic thermal images into their 
    visual effects or creative projects. Whether it's depicting heat signatures in a futuristic movie or 
    creating visually stunning thermal visualizations, our generated images can enhance the visual storytelling 
    and create immersive experiences.

    By leveraging the power of our model, users can explore these applications and more, unlocking new
     possibilities in various domains without compromising privacy or the need for extensive data collection.
    """)

st.header('Contributions')

st.write("- V. Espinosa-Duró, M. Faundez-Zanuy and J. Mekyska, \"A New Face Database Simultaneously Acquired in "
         "Visible,  Near-Infrared and Thermal Spectrums\", Cognitive Computation, vol. 5, no. 1, pp. 119¬–135, 2013.V. "
         "Espinosa-Duró, M. Faundez-Zanuy, J. Mekyska and E. Monte-Moreno, \"A Criterion for Analysis of Different "
         "Sensor Combinations with an Application to Face Biometrics\", Cognitive Computation, vol. 2, no. 3, pp. "
         "135-141, 2010.")

st.write("- Website: http://tdface.ece.tufts.edu/ Paper: Panetta, Karen, Qianwen Wan, Sos Agaian, Srijith Rajeev,"
         "Shreyas Kamath, Rahul Rajendran, Shishir Rao et al. \"A comprehensive database for benchmarking imaging"
         "systems.\" IEEE Transactions on Pattern Analysis and Machine Intelligence (2018).")

st.write("- @Article{s21103465, AUTHOR = {Abdrakhmanova, Madina and Kuzdeuov, Askat and Jarju, Sheikh and Khassanov, "
         "Yerbolat and Lewis, Michael and Varol, Huseyin Atakan}, TITLE = {SpeakingFaces: A Large-Scale Multimodal "
         "Dataset of Voice Commands with Visual and Thermal Video Streams}, JOURNAL = {Sensors}, VOLUME = {21}, "
         "YEAR = {2021}, NUMBER = {10}, ARTICLE-NUMBER = {3465}, URL = {https://www.mdpi.com/1424-8220/21/10/3465}, "
         "ISSN = {1424-8220}, DOI = {10.3390/s21103465}}")
